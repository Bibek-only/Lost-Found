// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_DEV")
}

//user type
enum UserType {
  ADMIN
  NORMAL
}



enum UserState {
  LOST
  FOUND
  NONE
}

enum CurrentYear {
  FIRST
  SECOND
  THIRD
  FOURTH
}




//user Model
model User {
  id           Int      @id @unique @default(autoincrement())
  fullName     String
  firstName    String?
  middleName   String?
  lastName     String?
  profileImage String?
  email        String   @unique
  phoneNo      String?
  address      Address?
  isProfileCompleted Boolean @default(false)

  userType   UserType   @default(NORMAL)
  campusRole String @default("Student")
  userState  UserState  @default(NONE)

  // Student Info
  branch       String?
  academicYear String?
  section      String?
  currentYear  CurrentYear?

  // Teacher Info
  designation String?
  department  String?

  // Staff Info
  jobTitle  String? // e.g., "Librarian"
  staffDept String? // e.g., "Library", "Admin"

  // Other
  other String? // e.g., "Alumni â€“ Batch 2018"

  //reference to tthe listing
  listing Listing[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id       Int     @id @unique @default(autoincrement())
  country  String? @default("India")
  state    String? 
  district String?
  city     String?
  pin      String?

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])
}

enum ListingType {
  LOST
  FOUND
}

enum ListingStatus {
  ACTIVE
  RESOLVED
  EXPIRED
}

model Listing {
  id Int @id @unique @default(autoincrement())

  title       String
  description String?
  keywords    String[]

  listingType ListingType //lost or found
  status      ListingStatus @default(ACTIVE) //the product is founded or not
  landmark    String? // e.g., "Near Library"

  lostOrFoundAt DateTime? // When user lost/found it
  createdAt     DateTime  @default(now()) //time of the entry
  updatedAt     DateTime  @updatedAt //time of update of the entry

  isDeleted Boolean @default(false)

  images ItemImage[] //relation to image model
  userId Int
  user   User        @relation(fields: [userId], references: [id])
}

model ItemImage {
  id        Int     @id @unique @default(autoincrement())
  imageUrl  String
  fileId String
  listingId Int
  listing   Listing @relation(fields: [listingId], references: [id])
}
